@model AllBookingViewModel
@using TouristTourGuide.Services.Interfaces
@using TouristTourGuide.Infrastrucutre;
@inject IGuideUserService ugs;
@inject ITourService tourService;
@inject IImageService imageService;

@{
    bool isCurrentUserOwner = false;
    bool isHavePicture = tourService.isHavePictures(Model.TourId);
    var getImage = imageService.GetImageBytesMongoDb(Model.TourPicutreUniqueName);

    bool userIsGuide = ugs.isUserGuide(this.User.GetCurrentUserId());
    // bool isUserAdmin = ClaimPrincipalExtensions.IsAdmin(this.User);
    if (userIsGuide)
    {
        string guideId = ugs.GuidUserId(this.User.GetCurrentUserId());
        isCurrentUserOwner = await tourService.IsTourOwner(guideId, Model.TourId);
    }

}
<div class="col-md-4">
    <div class="card mb-3">
        @if ((getImage.Length >0))
        {
            <img src="@("data:image/jpeg;base64," + Convert.ToBase64String(getImage))"
                 alt="" class="img-fluid">
        }
        <div class="card-body text-center">
            <h4>Tour name: @Model.TourName</h4>          
            <br />
            @*  @if (this.User.Identity.IsAuthenticated) *@
            @if (userIsGuide)
            {
                @if (this.User.IsAdmin() || isCurrentUserOwner)
                {
                    <a asp-controller="TouristTour" asp-action="TourBookings" asp-route-tourId="@Model.TourId"
                    class="btn btn-info">Info Table</a>
                }
            }
        </div>
    </div>
</div>
