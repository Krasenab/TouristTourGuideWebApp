@model DetailsViewModel;
<style>
    * {
        box-sizing: border-box;
    }

    .mySlides {
        display: none;
    }

    .cursor {
        cursor: pointer;
    }

    .prev, .next {
        cursor: pointer;
        position: absolute;
        top: 40%;
        width: auto;
        padding: 8px;
        margin-top: -25px;
        color: white;
        font-size: 24px;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.6);
        transition: background-color 0.3s ease;
        text-decoration: none
    }

    .prev {
        left: 10px;
    }

    .next {
        right: 10px;
    }

        .prev:hover, .next:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }

    .numbertext {
        color: #f2f2f2;
        font-size: 14px;
        padding: 8px 12px;
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 8px;
    }

    .column {
        float: left;
        width: 16.66%;
        padding: 5px;
    }

    .demo {
        opacity: 0.6;
        transition: opacity 0.3s ease;
    }

        .demo:hover, .active {
            opacity: 1;
        }


    .btn-primary {
        background-color: #007BFF;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>

<div class="container mt-5">

    <div class="text-center mb-5">
        <h2>@Model.TourName</h2>
    </div>

    @if (Model.ApplicationImages != null && Model.ApplicationImages.Count > 0)
    {
        <div class="position-relative">
            @for (var i = 0; i < Model.ApplicationImages.Count; i++)
            {
                <div class="mySlides">
                    <div class="numbertext">@(i + 1) / @Model.ApplicationImages.Count </div>
                   @*  <img src="@Url.Action("GetImage", "Tour", new { fileName = Model.ApplicationImages[i].FileName })" style="width:100%; max-height: 500px;"> *@

                    <img resource="@Model.ApplicationImages[i].FileData" />

                   @*  @if (isUserGuide) *@
                    
                        <button onclick="deleteImage('@Model.ApplicationImages[i].FileName', '@Model.Id')" class="btn btn-danger delete-button">Delete</button>
                    

                </div>
            }
            @foreach (var item in Model.ApplicationImages)
            {
               
            }
            <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
            <a class="next" onclick="plusSlides(1)">&#10095;</a>

            <div class="text-center mt-3">
                @for (var i = 0; i < Model.ApplicationImages.Count; i++)
                {
                   @*  <img class="demo cursor" src="@Url.Action("GetImage", "Tour", new { fileName = Model.Images[i].FileName })" style="width:80px;" onclick="currentSlide(@i + 1)" alt="@Model.Images[i].FileName"> *@
                  <img resource="@Model.ApplicationImages[i].FileData">
                   //бутон за тестване
                    //<button onclick="deleteImage('@Model.Images[i].FileName', '@Model.Id')" class="btn btn-danger">Delete</button>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning">No images available for this tour.</div>
    }


    <div class="row mt-5">

        <div class="col-lg-6">
            <h4>Details</h4>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><strong>Duration:</strong> @Model.Duaration</li>
                <li class="list-group-item"><strong>Price Per Person:</strong> @Model.PricePerPerson.ToString("C2")</li>
                <li class="list-group-item"><strong>Category:</strong> @Model.Category</li>
                <li class="list-group-item"><strong>Location:</strong> @Model.LocationCountry</li>
                <li class="list-group-item"><strong>Meeting Point:</strong> @Model.MeetingPoint</li>
                <li class="list-group-item"><strong>What to bring and know before you go :</strong> @Model.KnowBeforeYouGo</li>
                <li class="list-group-item"><strong>Category: </strong> @Model.Category</li>
            </ul>
        </div>
        <div class="col-lg-5">
            <h4>Full description</h4>
            <p> @Model.FullDescription</p>
        </div>

        <div class="col-lg-1 d-flex align-items-start justify-content-end">
            <a asp-controller="TourBooking" asp-action="MakeBooking" asp-route-tourId="@Model.Id" class="btn btn-success">BookTour</a>
          @*   @if (isUserGuide) *@
            
                <form asp-controller="Tour" asp-action="DeleteTour" asp-route-tourId="@Model.Id" method="post" class="d-inline ml-2">
                    <button type="submit" class="btn btn-danger">DeleteTour</button>
                </form>

                <a asp-controller="TourBooking" asp-action="BookingOnTour" asp-route-tourId="@Model.Id" class="btn btn-success d-inline ml-3">Tour bookings</a>
            

        </div>

    </div>

    <div class="row mt-5">
        <div class="col-lg-12">

          @*   @if (isUserGuide) *@
            
                <h4>Add a new image:</h4>
                <form method="post" enctype="multipart/form-data" asp-action="AddImageToTour" asp-controller="Tour">
                    <input type="hidden" name="tourId" value="@Model.Id" />
                    <div class="form-group">
                        <input type="file" name="file" required class="form-control mb-3" />
                        <button type="submit" class="btn btn-primary btn-block">Upload Image</button>
                    </div>
                </form>

            

        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.0-beta3/js/bootstrap.min.js"></script>

<script>
    let slideIndex = 1;
    showSlides(slideIndex);

    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        let i;
        let slides = document.getElementsByClassName("mySlides");
        let dots = document.getElementsByClassName("demo");
        let captionText = document.getElementById("caption");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
        if (captionText) {
            captionText.innerHTML = dots[slideIndex - 1].alt;
        }
    }
</script>
<script>
    function deleteImage(fileName, tourId) {
        if (confirm('Are you sure you want to delete this image?')) {
            fetch(`/Tour/DelatePicture?fileName=${fileName}&tourId=${tourId}`, {
                method: 'POST'
            })
                .then(response => response.text())
                .then(data => {
                    if (data === 'success') {
                        alert('Image deleted successfully');
                        location.reload();
                    } else {
                        alert('Failed to delete image');
                    }
                });
        }
    }

</script>