@model DetailsViewModel
@using TouristTourGuide.Services.Interfaces;
@using TouristTourGuide.Infrastrucutre;
@inject ITourService tService
@inject IGuideUserService gSerive
@inject IImageService imgService

@{

    var currentUser = ClaimPrincipalExtensions.GetCurrentUserId(this.User);
    bool isUserGuide = gSerive.isUserGuide(currentUser);
    bool isOwner = false;
    string sqlImageDataUniqueName = await imgService.GetAppUserImageFileUniqueNameSQL(currentUser);
    
    byte[]? currentUserProfilePicture = imgService.GetImageBytesMongoDb(sqlImageDataUniqueName);
    if (isUserGuide)
    {
        string guserID = gSerive.GuidUserId(currentUser);
        if (await tService.IsTourOwner(guserID, Model.Id))
        {
            isOwner = true;
        }
    }

}
<head>
    <title>@Model.TourName</title>
    <link rel="stylesheet" href="~/css/gallerypictures.css" style="stylesheet" />
    <link rel="stylesheet" href="~/css/votestartstyle.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/smoothness/jquery-ui.css">
    <style>
        .containers {
          /*   background-color: #E0F3EF; */
            /*  background: linear-gradient(to left right, #E0F3EF, #FFFFFF); */
        }
        /* .p{
            color:#198754;
        }
        .h5,.h4{
            color:#198754;
        }
        .span {
            color: #FFD558;
        } */

        .text-truncate {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            display: block;
            width: 100%;
            cursor: help;
        }

        .custom-container {
            overflow: hidden;
        }

        .custom-row {
            margin-bottom: 10px;
        }

        .custom-form-group {
            margin-bottom: 10px;
        }

        .custom-row input[type="file"],
        .custom-row button {
            width: 75%;
            box-sizing: border-box;
        }

    </style>

</head>


<div class="text-center mb-5" style="padding-top:2em;">
    <h2>@Model.TourName</h2>
</div>


@if (Model.AllTourApplicationImages != null && Model.AllTourApplicationImages.Count > 0)
{

    <div class="container overflow-hidden">
        <div class="gallery">
            @for (int i = 0; i < Model.AllTourApplicationImages.Count; i++)
            {
                @if (i == 0)
                {
                    <figure class="gallery__item gallery__item--1">
                        <a href="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                           data-lightbox="gallery"
                           data-title="@Model.TourName">
                            <img src="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                                 alt="" class="img-fluid">
                        </a>
                    </figure>

                }
                else if (i == 1)
                {
                    <figure class="gallery__item gallery__item--2">
                        <a href="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                           data-lightbox="gallery"
                           data-title="@Model.TourName">
                            <img src="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                                 alt="" class="img-fluid">
                        </a>
                    </figure>
                }
                else if (i == 2)
                {
                    <figure class="gallery__item gallery__item--3">

                        <a href="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                           data-lightbox="gallery"
                           data-title="@Model.TourName">

                            <img src="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                                 alt="" class="img-fluid">
                        </a>
                    </figure>
                }
                else if (i == 3)
                {
                    <figure class="gallery__item gallery__item--4">
                        <a href="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                           data-lightbox="gallery" style=""
                           data-title="@Model.TourName">
                            <img src="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                                 alt="" class="img-fluid">
                        </a>
                    </figure>

                }
                else if (i >= 4)
                {
                    <a class="d-none" href="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                       data-lightbox="gallery"
                       data-title="@Model.TourName">
                        <img src="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.AllTourApplicationImages[i].FileData))"
                             alt="" class="img-fluid">

                    </a>

                }

            }
        </div>
    </div>

}
else
{
    <div class="alert alert-warning">No images available for this tour.</div>
}

@* <section class="date-card" style="padding-top:1em; padding-bottom:1em; justify-content:end;">
    <div class="row">
        <div class="col-sm-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Availability Tour Dates</h5>
                    <p class="card-text">You can see closed and free dates for this tourist tour</p>
                    <input type="hidden" id="modelId" value="@Model.Id">
                    <input type="date" id="checkDate">
                    <button id="availability-btn" class="btn btn-primary">Check Availability</button>
                    <a asp-controller="Booking" asp-action="Create" asp-route-tourId="@Model.Id" class="btn btn-success">Create booking</a>
                    <div id="messageBox" class="mt-3"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="messageModalLabel">Message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalMessageBody">
                    <!-- Message will be inserted here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</section> *@


<section class="information-section-top p-4 bg-white rounded shadow-sm mb-4">
    <div class="text-center mb-4">
        <h5 class="text">General information</h5>
    </div>
    <div class="row text-center mb-3">
        <div class="col-md-4">
            <div class="card border-0">
                <div class="card-body">
                    <span class="material-symbols-outlined text-dark">payments</span>
                    <p class="mt-2">@Model.PricePerPerson - per person</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0">
                <div class="card-body">
                    <span class="material-symbols-outlined text-dark">av_timer</span>
                    <p class="mt-2">@Model.Duaration </p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0">
                <div class="card-body">
                    <span class="material-symbols-outlined text-dark">public</span>
                    <p class="mt-2">@Model.LocationCountry</p>
                </div>
            </div>
        </div>
    </div>
    <div class="date-card" style="padding-top:1em; padding-bottom:1em; justify-content:end;">
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Availability Tour Dates</h5>
                        <p class="card-text">You can see closed and free dates for this tourist tour</p>
                        <input type="hidden" id="modelId" value="@Model.Id">
                        <input type="date" id="checkDate">
                        <button id="availability-btn" class="btn btn-primary">Check Availability</button>
                        <a asp-controller="Booking" asp-action="Create" asp-route-tourId="@Model.Id" class="btn btn-success">Create booking</a>
                        <div id="messageBox" class="mt-3"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="messageModalLabel">Message</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="modalMessageBody">
                        <!-- Message will be inserted here -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>


<section class="information-section p-4 bg-white rounded shadow-sm mb-4">
    <div class="mb-4">
        <h5 class="text">Experience</h5>
        <div class="row">
            <div class="col-md-2">
                <p><strong>Highlights</strong></p>
            </div>
            <div class="col-md-10">
                <ul class="list-unstyled">
                    @foreach (var highlight in (Model.Highlights ?? string.Empty).Split(new[] { '\n', ',', ';' }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        <li>• @highlight</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div class="row">
            <div class="col-md-2">
                <p><strong>Full description</strong></p>
            </div>
            <div class="col-md-10">
                <p>@Model.FullDescription</p>
                <a href="#" class="text-info">See more</a>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div class="row">
            <div class="col-md-2">
                <p><strong>Includes</strong></p>
            </div>
            <div class="col-md-10">
                <ul class="list-unstyled">
                    @foreach (var include in (Model.Includes ?? string.Empty).Split(new[] { '\n', ',', ';' }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        <li class="text">@include</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div class="row">
            <div class="col-md-2">
                <p><strong>Meeting point</strong></p>
            </div>
            <div class="col-md-10">
                <p>@Model.MeetingPoint</p>
                <a href="@Model.MeetingPointMapUrl" class="text-info">Open in Google Maps →</a>
            </div>
        </div>
    </div>

    <div class="mb-4">
        <div class="row">
            <div class="col-md-2">
                <p><strong>Important information</strong></p>
            </div>
            <div class="col-md-10">
                <p><strong>Know before you go</strong></p>
                <ul class="list-unstyled">
                    @foreach (var info in (Model.KnowBeforeYouGo ?? string.Empty).Split(new[] { '\n', ',', ';' }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        <li>• @info</li>
                    }
                </ul>
                @if (Model.WhatToBring != null)
                {

                    <p><strong>What to bring</strong></p>
                    <p>@Model.WhatToBring</p>

                }
                @if (Model.NotSuitableFor != null)
                {

                    <p><strong>This tour is not suitable for</strong></p>
                    <p>@Model.NotSuitableFor</p>
                }
            </div>

        </div>
    </div>
</section>



<section class="control-section">


    @if (isOwner || this.User.IsAdmin())
    {
        <div class="row">
            <div class="col">
                <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                    <form asp-controller="TouristTour" asp-action="Delete" asp-route-tourId="@Model.Id" method="post" class="d-inline">
                        <button type="submit" class="btn btn-danger">Delete Tour</button>
                    </form>
                    <a asp-controller="AppImage" asp-action="EditTourAlbum" asp-route-tourId="@Model.Id" class="btn btn-warning">Edit tour album</a>
                   @*  <a asp-controller="TouristTour" asp-action="TourBookings" asp-route-tourId="@Model.Id" class="btn btn-success d-inline">Tour bookings</a> *@
                    <button id="showUplFormBtn" class="btn btn-primary">Add pictures to your tour</button>
                </div>
            </div>
        </div>

        <div class="custom-row">
          @*   <button id="showUplFormBtn" class="btn btn-primary btn-sm bg-opacity-25 border-1" style="border-radius:0.5em">Add pictures to your tour</button> *@
            <div id="hideElement" style="display:none;">
                <div class="col-lg-12" style="padding-top:1em;">
                    <h4>Add a new image to your tour:</h4>
                    <form method="post" enctype="multipart/form-data" asp-action="AddImage" asp-controller="TouristTour">
                        <input type="hidden" name="tourId" value="@Model.Id" />
                        <div class="custom-form-group" style="padding-top:1em;">
                            <input type="file" name="imageFile" required class="form-control" />
                            <button type="submit" class="btn btn-primary btn-block">Upload Image</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    }
</section>

<section class="votes-section">
    <div row="d-flex">
        <div class="col-7 text-center">
            <h4>Customer reviews</h4>
        </div>
    </div>
    <div class="custom-row" style="text-align:center; padding-top:2em;">
        <div class="col">
            <p id="ratingDisplay" style="text-decoration-style:solid;">@Model.TourRatign.ToString("f2") / 5.00</p>
            <p id="voteBasedOn">Rating is based on @Model.VoteCount users votes</p>
        </div>
    </div>
    <div class="row mb-5">
        <ul class="ratings">
            <li class="star" onclick="sendVote('@Model.Id',1)"></li>
            <li class="star" onclick="sendVote('@Model.Id',2)"></li>
            <li class="star" onclick="sendVote('@Model.Id',3)"></li>
            <li class="star" onclick="sendVote('@Model.Id',4)"></li>
            <li class="star" onclick="sendVote('@Model.Id',5)"></li>
        </ul>
    </div>
</section>


<section class="comments-section" style="background-color:#f8f9fa; padding: 20px 0;">
    <div row="d-flex">
        <div class="col mb-5 text-center">
            <h5 class="card-title">Comments</h5>
        </div>
    </div>
    <div class="container">
        <div class="row d-flex justify-content-start">
            <div class="col mb-10">
                <button id="showFormBtn" class="btn btn mb-3" style="background-color:#FFD558">Add new comment</button>
                <form id="commentForm" style="display:none;">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex align-items-start mb-3">
                                @if (currentUserProfilePicture != null)
                                {
                                    <img class="rounded-circle shadow-1-strong me-3"
                                         src="@("data:image/jpeg;base64," + Convert.ToBase64String(currentUserProfilePicture))" alt="avatar" width="40"
                                         height="40" />
                                }
                                else
                                {
                                    <img class="rounded-circle shadow-1-strong me-3"
                                         src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(19).webp" alt="avatar" width="40" height="40" />
                                }
                                <textarea class="form-control" id="Content" name="Content" rows="3" placeholder="Напишете вашия коментар..."></textarea>
                            </div>
                            <input type="hidden" id="TourId" name="TourId" value="@Model.Id">
                            <button type="button" id="postCommentBtn" class="btn btn-primary float-end">Post your comment</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row d-flex justify-content-end">
            <div class="col-md-10">
                <div class="card mb-4 border-0" style="background-color:#f8f9fa;">
                    <div class="card-body">                      
                        <div class="comments-container">
                            @for (int i = 0; i < Model.Comments.Count; i++)
                            {
                                <div class="comment-item card mb-2" style="display: @(i < 3 ? "block" : "none");">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            @if (Model.Comments[i].AppUserProfilePicture != null)
                                            {
                                                <img class="rounded-circle shadow-1-strong me-3"
                                                     src="@("data:image/jpeg;base64," + Convert.ToBase64String(Model.Comments[i].AppUserProfilePicture) )"
                                                     height="50" width="50" alt="avatar" />
                                            }
                                            else
                                            {
                                                <img class="rounded-circle shadow-1-strong me-3"
                                                     src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(19).webp" alt="avatar" width="50" height="50" />
                                            }
                                            <div>
                                                <h6 class="fw-bold mb-0">@Model.Comments[i].AppUserName</h6>
                                                <p class="text-muted small mb-0">Posted on : mm-dd-yyyy</p>
                                            </div>
                                        </div>
                                        <p class="comment-text mb-0">@Model.Comments[i].Content</p>
                                    </div>
                                </div>
                            }
                        </div>
                        @if (Model.Comments.Count > 5)
                        {
                            <button id="readMoreBtn" class="btn btn-link">See more comments</button>
                        }
                    </div>
                </div>               
            </div>
        </div>
    </div>
</section>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.0-beta3/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>



<script>
    $(document).ready(function () {
        $("#availability-btn").click(function () {
            var passedDate = $("#checkDate").val();
            var modelId = $("#modelId").val();

            $.ajax({
                type: "POST",
                url: "/api/Dates/checkdate",
                contentType: "application/json",
                data: JSON.stringify({ tourId: modelId, closedDate: passedDate }),
                dataType: "json",
                success: function (response) {
                    // $("#modalMessageBody").text(response.message); // Вмъкване на съобщението при успех
                    // $('#messageModal').modal('show'); // Показване на модалния прозорец
                    // setTimeout(function () {
                    //     $('#messageModal').modal('hide'); // Затваряне на модалния прозорец след 5 секунди
                    // }, 5000);
                    var successMessage = '<div class="alert alert-success" id="successMessage">' + response.message + '</div>';
                    $("#messageBox").html(successMessage); // Показване на съобщението при успех
                    setTimeout(function () {
                        $('#successMessage').fadeOut('slow', function () {
                            $(this).remove();
                        }); // Скриване на съобщението след 5 секунди
                    }, 5000);
                },
                error: function (xhr) {
                    var response = JSON.parse(xhr.responseText);
                    var errorMessage = '<div class="alert alert-danger" id="errorMessage">' + response.message + '</div>';
                    $("#messageBox").html(errorMessage); // Показване на съобщението при грешка
                    setTimeout(function () {
                        $('#errorMessage').fadeOut('slow', function () {
                            $(this).remove();
                        }); // Скриване на съобщението след 5 секунди
                    }, 5000);
                }
            });
        });
    });
</script>

@*скрипт за затваряне и показване на формата за добавяне на коментари*@
<script>

    $('#showUplFormBtn').click(function () {
        var form = $('#hideElement');
        if (form.css('display') === 'none') {
            form.show();
        } else {
            form.hide();
        }
    });

</script>

@*скрипт за коментарите*@
<script>
    $(document).ready(function () {
        $('#showFormBtn').click(function () {
            $('#commentForm').slideToggle();
        });

        $('#readMoreBtn').click(function () {
            var hiddenComments = $('.comment-item:hidden');
            hiddenComments.slice(0, 3).slideDown();
            if (hiddenComments.length <= 3) {
                $(this).hide();
            }
        });

        $('#postCommentBtn').click(function () {
            var content = $('#Content').val().trim();
            var tourId = $('#TourId').val();

            if (content === "") {
                alert('Моля, въведете съобщение.');
                return false;
            }

            $.ajax({
                url: '/Comment/CreateComment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ Content: content, TourId: tourId }),
                success: function (response) {
                    alert('Коментарът е публикуван успешно');
                    $('#Content').val('');
                    var newCommentHtml = `
                    <div class="comment-item card mb-3">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <img class="rounded-circle shadow-1-strong me-3" src="@("data:image/jpeg;base64," + Convert.ToBase64String(currentUserProfilePicture))" alt="avatar" width="50" height="50" />
                                <div>
                                    <h6 class="fw-bold mb-0">${response.userName}</h6>
                                    <p class="text-muted small mb-0">Публикувано - преди малко</p>
                                </div>
                            </div>
                            <p class="comment-text mb-0">${content}</p>
                        </div>
                    </div>`;
                    $('.comments-container').prepend(newCommentHtml);
                },
                error: function () {
                    alert('Грешка при публикуването на коментара');
                }
            });
        });
    });
</script>

@*скрипт за рейтинга*@

<script>
    // Глобална променлива за текущия рейтинг
    var currentRating;
    
    // Глобална функция за актуализиране на звездите
    function updateStars(rating) {
        console.log('Updating stars with rating:', rating);
        var stars = $('.ratings .star');
        var fullStars = Math.floor(rating); // Закръгляме надолу, за да получим броя на пълните звезди
        var halfStar = (rating - fullStars >= 0.5); // Проверка за половин звезда

        // Премахваме всички предишни класове
        stars.removeClass('full half');

        // Запълваме пълните звезди
        for (var i = 0; i < fullStars; i++) {
            $(stars[i]).addClass('full');
        }

        // Запълваме половинчата звезда, ако има такава
        if (halfStar && fullStars < stars.length) {
            $(stars[fullStars]).addClass('half');
        }
    }

    // Функция за изпращане на вота чрез AJAX
    function sendVote(tourId, starValue) {
        var json = { tourId: tourId, starValue: starValue };

        $.ajax({
            url: "/api/vote",
            type: "POST",
            data: JSON.stringify(json),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response);
                var newRatingValue = response.ratingResultAfretVote;
                var newVoteCount = response.votesCount;
                $('#ratingDisplay').text(newRatingValue.toFixed(2) + ' / ' + '5.00');
                $('#voteBasedOn').text('Rating is based on ' + newVoteCount + ' users votes');

                // Обновяване на глобалната променлива currentRating с новия рейтинг
                currentRating = newRatingValue;

                // Обновяване на звездите с новия рейтинг
                updateStars(newRatingValue);
            }
        });
    }

    $(document).ready(function () {
        var stars = $('.ratings .star');
        currentRating = parseFloat($('#ratingDisplay').text()); // Инициално задаване на текущия рейтинг

        // Функция за добавяне на ховър ефект
        stars.on('mouseenter', function () {
            var index = $(this).index(); // Вземаме индекса на текущата звезда

            // Запълваме всички звезди до тази, над която е курсорът
            stars.each(function (i) {
                if (i <= index) {
                    $(this).addClass('hover').removeClass('full half');
                } else {
                    $(this).removeClass('hover full half'); // Премахваме запълването на звездите след тази, върху която е курсорът
                }
            });
        });

        // Функция за премахване на ховър ефект и възстановяване на текущата оценка
        stars.on('mouseleave', function () {
            stars.removeClass('hover');
            updateStars(currentRating); // Възстановяваме звездите според актуализирания текущ рейтинг
        });

        // Функция за обработка на клик върху звезда и изпращане на вота
        // stars.on('click', function () {
        //     var index = $(this).index() + 1; // Индексът на избраната звезда + 1
        //    sendVote('@Model.Id', index);  // Изпращаме гласа
        // });

        // Инициално задаване на звездите според текущата оценка
        updateStars(currentRating);
    });
</script>

@*лайт бокс скрипт*@
<script>
    lightbox.option({
        'resizeDuration': 200,
        'wrapAround': true,
        'alwaysShowNavOnTouchDevices': true

    });

</script>

<script>
    function deleteImage(uniqueFileName) {
        if (confirm('Are you sure you want to delete this image?')) {
            fetch(`/TouristTour/DeletePicture?uniqueName=${uniqueFileName}`, {
                method: 'POST'
            }).then(response => response.text()).then(data => {
                if (data === 'success') {
                    alert('Image deleted successfully');
                    // Reload or update the gallery as needed
                }
                else {
                    alert('Failed to delete image');
                }
            });
        }
    }
</script>