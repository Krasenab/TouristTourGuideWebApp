// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TouristTourGuide.Data;

#nullable disable

namespace TouristTourGuide.Data.Migrations
{
    [DbContext(typeof(TouristTourGuideDbContext))]
    [Migration("20240418230346_seedTour")]
    partial class seedTour
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.AppImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TouristTourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UniqueFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("TouristTourId");

                    b.ToTable("AppImages");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Culture"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nature"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Audio guides tours"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Attractions"
                        },
                        new
                        {
                            Id = 7,
                            Name = "City Tours"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Safari"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Religius and spiritual acttivities"
                        },
                        new
                        {
                            Id = 11,
                            Name = "History and culture"
                        });
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Comments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TouristTourId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("TouristTourId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Dates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("TouristTourReserveDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.GuideUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AboutTheActivityProvider")
                        .IsRequired()
                        .HasMaxLength(4500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalFirmName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegisteredAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ValueAddedTaxIdentificationNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("GuideUsers");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Village")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Åland Islands"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Albania"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Algeria"
                        },
                        new
                        {
                            Id = 5,
                            Country = "American Samoa"
                        },
                        new
                        {
                            Id = 6,
                            Country = "AndorrA"
                        },
                        new
                        {
                            Id = 7,
                            Country = "Angola"
                        },
                        new
                        {
                            Id = 8,
                            Country = "Anguilla"
                        },
                        new
                        {
                            Id = 9,
                            Country = "Antarctica"
                        },
                        new
                        {
                            Id = 10,
                            Country = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 11,
                            Country = "Argentina"
                        },
                        new
                        {
                            Id = 12,
                            Country = "Armenia"
                        },
                        new
                        {
                            Id = 13,
                            Country = "Aruba"
                        },
                        new
                        {
                            Id = 14,
                            Country = "Australia"
                        },
                        new
                        {
                            Id = 15,
                            Country = "Austria"
                        },
                        new
                        {
                            Id = 16,
                            Country = "Azerbaijan"
                        },
                        new
                        {
                            Id = 17,
                            Country = "Bahamas"
                        },
                        new
                        {
                            Id = 18,
                            Country = "Bahrain"
                        },
                        new
                        {
                            Id = 19,
                            Country = "Bangladesh"
                        },
                        new
                        {
                            Id = 20,
                            Country = "Barbados"
                        },
                        new
                        {
                            Id = 21,
                            Country = "Belarus"
                        },
                        new
                        {
                            Id = 22,
                            Country = "Belgium"
                        },
                        new
                        {
                            Id = 23,
                            Country = "Belize"
                        },
                        new
                        {
                            Id = 24,
                            Country = "Benin"
                        },
                        new
                        {
                            Id = 25,
                            Country = "Bermuda"
                        },
                        new
                        {
                            Id = 26,
                            Country = "Bhutan"
                        },
                        new
                        {
                            Id = 27,
                            Country = "Bolivia"
                        },
                        new
                        {
                            Id = 28,
                            Country = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 29,
                            Country = "Botswana"
                        },
                        new
                        {
                            Id = 30,
                            Country = "Bouvet Island"
                        },
                        new
                        {
                            Id = 31,
                            Country = "Brazil"
                        },
                        new
                        {
                            Id = 32,
                            Country = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = 33,
                            Country = "Brunei Darussalam"
                        },
                        new
                        {
                            Id = 34,
                            Country = "Bulgaria"
                        },
                        new
                        {
                            Id = 35,
                            Country = "Burkina Faso"
                        },
                        new
                        {
                            Id = 36,
                            Country = "Burundi"
                        },
                        new
                        {
                            Id = 37,
                            Country = "Cambodia"
                        },
                        new
                        {
                            Id = 38,
                            Country = "Cameroon"
                        },
                        new
                        {
                            Id = 39,
                            Country = "Canada"
                        },
                        new
                        {
                            Id = 40,
                            Country = "Cape Verde"
                        },
                        new
                        {
                            Id = 41,
                            Country = "Cayman Islands"
                        },
                        new
                        {
                            Id = 42,
                            Country = "Central African Republic"
                        },
                        new
                        {
                            Id = 43,
                            Country = "Chad"
                        },
                        new
                        {
                            Id = 44,
                            Country = "Chile"
                        },
                        new
                        {
                            Id = 45,
                            Country = "China"
                        },
                        new
                        {
                            Id = 46,
                            Country = "Christmas Island"
                        },
                        new
                        {
                            Id = 47,
                            Country = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            Id = 48,
                            Country = "Colombia"
                        },
                        new
                        {
                            Id = 49,
                            Country = "Comoros"
                        },
                        new
                        {
                            Id = 50,
                            Country = "Congo"
                        },
                        new
                        {
                            Id = 51,
                            Country = "Congo, The Democratic Republic of the"
                        },
                        new
                        {
                            Id = 52,
                            Country = "Cook Islands"
                        },
                        new
                        {
                            Id = 53,
                            Country = "Costa Rica"
                        },
                        new
                        {
                            Id = 54,
                            Country = "Cote D\"Ivoire"
                        },
                        new
                        {
                            Id = 55,
                            Country = "Croatia"
                        },
                        new
                        {
                            Id = 56,
                            Country = "Cuba"
                        },
                        new
                        {
                            Id = 57,
                            Country = "Cyprus"
                        },
                        new
                        {
                            Id = 58,
                            Country = "Czech Republic"
                        },
                        new
                        {
                            Id = 59,
                            Country = "Denmark"
                        },
                        new
                        {
                            Id = 60,
                            Country = "Djibouti"
                        },
                        new
                        {
                            Id = 61,
                            Country = "Dominica"
                        },
                        new
                        {
                            Id = 62,
                            Country = "Dominican Republic"
                        },
                        new
                        {
                            Id = 63,
                            Country = "Ecuador"
                        },
                        new
                        {
                            Id = 64,
                            Country = "Egypt"
                        },
                        new
                        {
                            Id = 65,
                            Country = "El Salvador"
                        },
                        new
                        {
                            Id = 66,
                            Country = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 67,
                            Country = "Eritrea"
                        },
                        new
                        {
                            Id = 68,
                            Country = "Estonia"
                        },
                        new
                        {
                            Id = 69,
                            Country = "Ethiopia"
                        },
                        new
                        {
                            Id = 70,
                            Country = "Falkland Islands (Malvinas)"
                        },
                        new
                        {
                            Id = 71,
                            Country = "Faroe Islands"
                        },
                        new
                        {
                            Id = 72,
                            Country = "Fiji"
                        },
                        new
                        {
                            Id = 73,
                            Country = "Finland"
                        },
                        new
                        {
                            Id = 74,
                            Country = "France"
                        },
                        new
                        {
                            Id = 75,
                            Country = "French Guiana"
                        },
                        new
                        {
                            Id = 76,
                            Country = "French Polynesia"
                        },
                        new
                        {
                            Id = 77,
                            Country = "French Southern Territories"
                        },
                        new
                        {
                            Id = 78,
                            Country = "Gabon"
                        },
                        new
                        {
                            Id = 79,
                            Country = "Gambia"
                        },
                        new
                        {
                            Id = 80,
                            Country = "Georgia"
                        },
                        new
                        {
                            Id = 81,
                            Country = "Germany"
                        },
                        new
                        {
                            Id = 82,
                            Country = "Ghana"
                        },
                        new
                        {
                            Id = 83,
                            Country = "Gibraltar"
                        },
                        new
                        {
                            Id = 84,
                            Country = "Greece"
                        },
                        new
                        {
                            Id = 85,
                            Country = "Greenland"
                        },
                        new
                        {
                            Id = 86,
                            Country = "Grenada"
                        },
                        new
                        {
                            Id = 87,
                            Country = "Guadeloupe"
                        },
                        new
                        {
                            Id = 88,
                            Country = "Guam"
                        },
                        new
                        {
                            Id = 89,
                            Country = "Guatemala"
                        },
                        new
                        {
                            Id = 90,
                            Country = "Guernsey"
                        },
                        new
                        {
                            Id = 91,
                            Country = "Guinea"
                        },
                        new
                        {
                            Id = 92,
                            Country = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = 93,
                            Country = "Guyana"
                        },
                        new
                        {
                            Id = 94,
                            Country = "Haiti"
                        },
                        new
                        {
                            Id = 95,
                            Country = "Heard Island and Mcdonald Islands"
                        },
                        new
                        {
                            Id = 96,
                            Country = "Holy See (Vatican City State)"
                        },
                        new
                        {
                            Id = 97,
                            Country = "Honduras"
                        },
                        new
                        {
                            Id = 98,
                            Country = "Hong Kong"
                        },
                        new
                        {
                            Id = 99,
                            Country = "Hungary"
                        },
                        new
                        {
                            Id = 100,
                            Country = "Iceland"
                        },
                        new
                        {
                            Id = 101,
                            Country = "India"
                        },
                        new
                        {
                            Id = 102,
                            Country = "Indonesia"
                        },
                        new
                        {
                            Id = 103,
                            Country = "Iran, Islamic Republic Of"
                        },
                        new
                        {
                            Id = 104,
                            Country = "Iraq"
                        },
                        new
                        {
                            Id = 105,
                            Country = "Ireland"
                        },
                        new
                        {
                            Id = 106,
                            Country = "Isle of Man"
                        },
                        new
                        {
                            Id = 107,
                            Country = "Israel"
                        },
                        new
                        {
                            Id = 108,
                            Country = "Italy"
                        },
                        new
                        {
                            Id = 109,
                            Country = "Jamaica"
                        },
                        new
                        {
                            Id = 110,
                            Country = "Japan"
                        },
                        new
                        {
                            Id = 111,
                            Country = "Jersey"
                        },
                        new
                        {
                            Id = 112,
                            Country = "Jordan"
                        },
                        new
                        {
                            Id = 113,
                            Country = "Kazakhstan"
                        },
                        new
                        {
                            Id = 114,
                            Country = "Kenya"
                        },
                        new
                        {
                            Id = 115,
                            Country = "Kiribati"
                        },
                        new
                        {
                            Id = 116,
                            Country = "Korea, Democratic People\"S Republic of"
                        },
                        new
                        {
                            Id = 117,
                            Country = "Korea, Republic of"
                        },
                        new
                        {
                            Id = 118,
                            Country = "Kuwait"
                        },
                        new
                        {
                            Id = 119,
                            Country = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = 120,
                            Country = "Lao People\"S Democratic Republic"
                        },
                        new
                        {
                            Id = 121,
                            Country = "Latvia"
                        },
                        new
                        {
                            Id = 122,
                            Country = "Lebanon"
                        },
                        new
                        {
                            Id = 123,
                            Country = "Lesotho"
                        },
                        new
                        {
                            Id = 124,
                            Country = "Liberia"
                        },
                        new
                        {
                            Id = 125,
                            Country = "Libyan Arab Jamahiriya"
                        },
                        new
                        {
                            Id = 126,
                            Country = "Liechtenstein"
                        },
                        new
                        {
                            Id = 127,
                            Country = "Lithuania"
                        },
                        new
                        {
                            Id = 128,
                            Country = "Luxembourg"
                        },
                        new
                        {
                            Id = 129,
                            Country = "Macao"
                        },
                        new
                        {
                            Id = 130,
                            Country = "Macedonia, The Former Yugoslav Republic of"
                        },
                        new
                        {
                            Id = 131,
                            Country = "Madagascar"
                        },
                        new
                        {
                            Id = 132,
                            Country = "Malawi"
                        },
                        new
                        {
                            Id = 133,
                            Country = "Malaysia"
                        },
                        new
                        {
                            Id = 134,
                            Country = "Maldives"
                        },
                        new
                        {
                            Id = 135,
                            Country = "Mali"
                        },
                        new
                        {
                            Id = 136,
                            Country = "Malta"
                        },
                        new
                        {
                            Id = 137,
                            Country = "Marshall Islands"
                        },
                        new
                        {
                            Id = 138,
                            Country = "Martinique"
                        },
                        new
                        {
                            Id = 139,
                            Country = "Mauritania"
                        },
                        new
                        {
                            Id = 140,
                            Country = "Mauritius"
                        },
                        new
                        {
                            Id = 141,
                            Country = "Mayotte"
                        },
                        new
                        {
                            Id = 142,
                            Country = "Mexico"
                        },
                        new
                        {
                            Id = 143,
                            Country = "Micronesia, Federated States of"
                        },
                        new
                        {
                            Id = 144,
                            Country = "Moldova, Republic of"
                        },
                        new
                        {
                            Id = 145,
                            Country = "Monaco"
                        },
                        new
                        {
                            Id = 146,
                            Country = "Mongolia"
                        },
                        new
                        {
                            Id = 147,
                            Country = "Montserrat"
                        },
                        new
                        {
                            Id = 148,
                            Country = "Morocco"
                        },
                        new
                        {
                            Id = 149,
                            Country = "Mozambique"
                        },
                        new
                        {
                            Id = 150,
                            Country = "Myanmar"
                        },
                        new
                        {
                            Id = 151,
                            Country = "Namibia"
                        },
                        new
                        {
                            Id = 152,
                            Country = "Nauru"
                        },
                        new
                        {
                            Id = 153,
                            Country = "Nepal"
                        },
                        new
                        {
                            Id = 154,
                            Country = "Netherlands"
                        },
                        new
                        {
                            Id = 155,
                            Country = "Netherlands Antilles"
                        },
                        new
                        {
                            Id = 156,
                            Country = "New Caledonia"
                        },
                        new
                        {
                            Id = 157,
                            Country = "New Zealand"
                        },
                        new
                        {
                            Id = 158,
                            Country = "Nicaragua"
                        },
                        new
                        {
                            Id = 159,
                            Country = "Niger"
                        },
                        new
                        {
                            Id = 160,
                            Country = "Nigeria"
                        },
                        new
                        {
                            Id = 161,
                            Country = "Niue"
                        },
                        new
                        {
                            Id = 162,
                            Country = "Norfolk Island"
                        },
                        new
                        {
                            Id = 163,
                            Country = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 164,
                            Country = "Norway"
                        },
                        new
                        {
                            Id = 165,
                            Country = "Oman"
                        },
                        new
                        {
                            Id = 166,
                            Country = "Pakistan"
                        },
                        new
                        {
                            Id = 167,
                            Country = "Palau"
                        },
                        new
                        {
                            Id = 168,
                            Country = "Palestinian Territory, Occupied"
                        },
                        new
                        {
                            Id = 169,
                            Country = "Panama"
                        },
                        new
                        {
                            Id = 170,
                            Country = "Papua New Guinea"
                        },
                        new
                        {
                            Id = 171,
                            Country = "Paraguay"
                        },
                        new
                        {
                            Id = 172,
                            Country = "Peru"
                        },
                        new
                        {
                            Id = 173,
                            Country = "Philippines"
                        },
                        new
                        {
                            Id = 174,
                            Country = "Pitcairn"
                        },
                        new
                        {
                            Id = 175,
                            Country = "Poland"
                        },
                        new
                        {
                            Id = 176,
                            Country = "Portugal"
                        },
                        new
                        {
                            Id = 177,
                            Country = "Puerto Rico"
                        },
                        new
                        {
                            Id = 178,
                            Country = "Qatar"
                        },
                        new
                        {
                            Id = 179,
                            Country = "Reunion"
                        },
                        new
                        {
                            Id = 180,
                            Country = "Romania"
                        },
                        new
                        {
                            Id = 181,
                            Country = "Russian Federation"
                        },
                        new
                        {
                            Id = 182,
                            Country = "RWANDA"
                        },
                        new
                        {
                            Id = 183,
                            Country = "Saint Helena"
                        },
                        new
                        {
                            Id = 184,
                            Country = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = 185,
                            Country = "Saint Lucia"
                        },
                        new
                        {
                            Id = 186,
                            Country = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            Id = 187,
                            Country = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            Id = 188,
                            Country = "Samoa"
                        },
                        new
                        {
                            Id = 189,
                            Country = "San Marino"
                        },
                        new
                        {
                            Id = 190,
                            Country = "Sao Tome and Principe"
                        },
                        new
                        {
                            Id = 191,
                            Country = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 192,
                            Country = "Senegal"
                        },
                        new
                        {
                            Id = 193,
                            Country = "Serbia and Montenegro"
                        },
                        new
                        {
                            Id = 194,
                            Country = "Seychelles"
                        },
                        new
                        {
                            Id = 195,
                            Country = "Sierra Leone"
                        },
                        new
                        {
                            Id = 196,
                            Country = "Singapore"
                        },
                        new
                        {
                            Id = 197,
                            Country = "Slovakia"
                        },
                        new
                        {
                            Id = 198,
                            Country = "Slovenia"
                        },
                        new
                        {
                            Id = 199,
                            Country = "Solomon Islands"
                        },
                        new
                        {
                            Id = 200,
                            Country = "Somalia"
                        },
                        new
                        {
                            Id = 201,
                            Country = "South Africa"
                        },
                        new
                        {
                            Id = 202,
                            Country = "South Georgia and the South Sandwich Islands"
                        },
                        new
                        {
                            Id = 203,
                            Country = "Spain"
                        },
                        new
                        {
                            Id = 204,
                            Country = "Sri Lanka"
                        },
                        new
                        {
                            Id = 205,
                            Country = "Sudan"
                        },
                        new
                        {
                            Id = 206,
                            Country = "Suriname"
                        },
                        new
                        {
                            Id = 207,
                            Country = "Svalbard and Jan Mayen"
                        },
                        new
                        {
                            Id = 208,
                            Country = "Swaziland"
                        },
                        new
                        {
                            Id = 209,
                            Country = "Sweden"
                        },
                        new
                        {
                            Id = 210,
                            Country = "Switzerland"
                        },
                        new
                        {
                            Id = 211,
                            Country = "Syrian Arab Republic"
                        },
                        new
                        {
                            Id = 212,
                            Country = "Taiwan, Province of China"
                        },
                        new
                        {
                            Id = 213,
                            Country = "Tajikistan"
                        },
                        new
                        {
                            Id = 214,
                            Country = "Tanzania, United Republic of"
                        },
                        new
                        {
                            Id = 215,
                            Country = "Thailand"
                        },
                        new
                        {
                            Id = 216,
                            Country = "Timor-Leste"
                        },
                        new
                        {
                            Id = 217,
                            Country = "Togo"
                        },
                        new
                        {
                            Id = 218,
                            Country = "Tokelau"
                        },
                        new
                        {
                            Id = 219,
                            Country = "Tonga"
                        },
                        new
                        {
                            Id = 220,
                            Country = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 221,
                            Country = "Tunisia"
                        },
                        new
                        {
                            Id = 222,
                            Country = "Turkey"
                        },
                        new
                        {
                            Id = 223,
                            Country = "Turkmenistan"
                        },
                        new
                        {
                            Id = 224,
                            Country = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = 225,
                            Country = "Tuvalu"
                        },
                        new
                        {
                            Id = 226,
                            Country = "Uganda"
                        },
                        new
                        {
                            Id = 227,
                            Country = "Ukraine"
                        },
                        new
                        {
                            Id = 228,
                            Country = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 229,
                            Country = "United Kingdom"
                        },
                        new
                        {
                            Id = 230,
                            Country = "United States"
                        },
                        new
                        {
                            Id = 231,
                            Country = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 232,
                            Country = "Uruguay"
                        },
                        new
                        {
                            Id = 233,
                            Country = "Uzbekistan"
                        },
                        new
                        {
                            Id = 234,
                            Country = "Vanuatu"
                        },
                        new
                        {
                            Id = 235,
                            Country = "Venezuela"
                        },
                        new
                        {
                            Id = 236,
                            Country = "Viet Nam"
                        },
                        new
                        {
                            Id = 237,
                            Country = "Virgin Islands, British"
                        },
                        new
                        {
                            Id = 238,
                            Country = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Id = 239,
                            Country = "Wallis and Futuna"
                        },
                        new
                        {
                            Id = 240,
                            Country = "Western Sahara"
                        },
                        new
                        {
                            Id = 241,
                            Country = "Yemen"
                        },
                        new
                        {
                            Id = 242,
                            Country = "Zambia"
                        },
                        new
                        {
                            Id = 243,
                            Country = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 4, 18, 23, 3, 45, 711, DateTimeKind.Utc).AddTicks(3454));

                    b.Property<string>("Duaration")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GuideUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Highlights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Includes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KnowBeforeYouGo")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MeetingPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingPointMapUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotSuitableFor")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("PricePerPerson")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhatToBring")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startEndHouers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GuideUserId");

                    b.HasIndex("LocationId");

                    b.ToTable("TouristsTours");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTourBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookQueryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TouristTourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("TouristTourId");

                    b.ToTable("TouristTourBookings");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTourDates", b =>
                {
                    b.Property<Guid>("TouristTourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DatesId")
                        .HasColumnType("int");

                    b.HasKey("TouristTourId", "DatesId");

                    b.HasIndex("DatesId");

                    b.ToTable("TouristTourDates");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TouristTourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VoteValue")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("TouristTourId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.AppImages", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("AppImages")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.TouristTour", "TouristTour")
                        .WithMany("TourImages")
                        .HasForeignKey("TouristTourId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("TouristTour");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Comments", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.TouristTour", "TouristTour")
                        .WithMany("Comments")
                        .HasForeignKey("TouristTourId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("TouristTour");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.GuideUser", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTour", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.Category", "Category")
                        .WithMany("TouristTours")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.GuideUser", "GuideUser")
                        .WithMany("MyTours")
                        .HasForeignKey("GuideUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.Location", "Location")
                        .WithMany("TouristTours")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("GuideUser");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTourBooking", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserToursBookings")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.TouristTour", "TouristTour")
                        .WithMany("TouristTourBookings")
                        .HasForeignKey("TouristTourId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("TouristTour");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTourDates", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.Dates", "Dates")
                        .WithMany("TouristTourDates")
                        .HasForeignKey("DatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.TouristTour", "TouristTour")
                        .WithMany("TouristTourDates")
                        .HasForeignKey("TouristTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dates");

                    b.Navigation("TouristTour");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Vote", b =>
                {
                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TouristTourGuide.Data.Models.Sql.Models.TouristTour", "TouristTour")
                        .WithMany("Votes")
                        .HasForeignKey("TouristTourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("TouristTour");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.ApplicationUser", b =>
                {
                    b.Navigation("AppImages");

                    b.Navigation("UserToursBookings");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Category", b =>
                {
                    b.Navigation("TouristTours");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Dates", b =>
                {
                    b.Navigation("TouristTourDates");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.GuideUser", b =>
                {
                    b.Navigation("MyTours");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.Location", b =>
                {
                    b.Navigation("TouristTours");
                });

            modelBuilder.Entity("TouristTourGuide.Data.Models.Sql.Models.TouristTour", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("TourImages");

                    b.Navigation("TouristTourBookings");

                    b.Navigation("TouristTourDates");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
